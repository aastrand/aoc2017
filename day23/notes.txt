// init
0 set b 84       b = 84
1 set c b        c = b
2 jnz a 2        jmp 4 // a starts = 1
3 jnz 1 5        jmp 8 // beginning

// setup
4 mul b 100      b = b * 100 (8400)
5 sub b -100000  b = b + 100000 (108400)
6 set c b        c = b
7 sub c -17000   c = c + 17000 (125400)

// start
8 set f 1        f = 1
9 set d 2        d = 2

10 set e 2       e = 2

// innerloop
11 set g d       g = d
12 mul g e       g = g * e
13 sub g b       g = g - b
14 jnz g 2       if g != 0 jmp 16 // when d * e == b (108400), f = 0
15 set f 0       f = 0

16 sub e -1      e++

17 set g e       g = e
18 sub g b       g = g - b
19 jnz g -8      if g != 0 jmp 11 // when e == b, jump out of loop


20 sub d -1      d++
21 set g d       g = d
22 sub g b       g = d - b
23 jnz g -13     if g != 0 jmp 10 // if d == b, jmp out outer
24 jnz f 2       if f != 0 jmp 26
25 sub h -1      h++ // only increase h every time f == 0, e.g when b is not prime

26 set g b       g = b
27 sub g c       g = b - c
28 jnz g 2       if g != 0 jmp 30 // when b == c, halt
29 jnz 1 3       halt
30 sub b -17     b = b - 17 // b += 17
31 jnz 1 -23     jmp 8 // beginning